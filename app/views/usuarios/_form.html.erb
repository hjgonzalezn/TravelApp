<style>
  .custom-combobox {
    position: relative;
    display: inline-block;
  }
  .custom-combobox-toggle {
    position: absolute;
    top: 0;
    bottom: 0;
    margin-left: -1px;
    padding: 0;
    /* support: IE7 */
    *height: 1.7em;
    *top: 0.1em;
  }
  .custom-combobox-input {
    margin: 0;
    padding: 0.3em;
  	width: 25em;
  }

  </style>
  <script>
  (function( $ ) {
    $.widget( "custom.combobox", {
      _create: function() {
        this.wrapper = $( "<span>" )
          .addClass( "custom-combobox" )
          .insertAfter( this.element );
 
        this.element.hide();
        this._createAutocomplete();
        this._createShowAllButton();
      },
 
      _createAutocomplete: function() {
        var selected = this.element.children( ":selected" ),
          value = selected.val() ? selected.text() : "";
 
        this.input = $( "<input>" )
          .appendTo( this.wrapper )
          .val( value )
          .attr( "title", "" )
          .addClass( "custom-combobox-input ui-widget ui-widget-content ui-state-default ui-corner-left" )
          .autocomplete({
            delay: 0,
            minLength: 0,
            source: $.proxy( this, "_source" )
          })
          .tooltip({
            tooltipClass: "ui-state-highlight"
          });
 
        this._on( this.input, {
          autocompleteselect: function( event, ui ) {
            ui.item.option.selected = true;
            this._trigger( "select", event, {
              item: ui.item.option
            });
          },
 
          autocompletechange: "_removeIfInvalid"
        });
      },
 
      _createShowAllButton: function() {
        var input = this.input,
          wasOpen = false;
 
        $( "<a>" )
          .attr( "tabIndex", -1 )
          //.attr( "title", "Mostrar todas las opciones" )
          .tooltip()
          .appendTo( this.wrapper )
          .button({
            icons: {
              primary: "ui-icon-triangle-1-s"
            },
            text: false
          })
          .removeClass( "ui-corner-all" )
          .addClass( "custom-combobox-toggle ui-corner-right" )
          .mousedown(function() {
            wasOpen = input.autocomplete( "widget" ).is( ":visible" );
          })
          .click(function() {
            input.focus();
 
            // Close if already visible
            if ( wasOpen ) {
              return;
            }
 
            // Pass empty string as value to search for, displaying all results
            input.autocomplete( "search", "" );
          });
      },
 
      _source: function( request, response ) {
        var matcher = new RegExp( $.ui.autocomplete.escapeRegex(request.term), "i" );
        response( this.element.children( "option" ).map(function() {
          var text = $( this ).text();
          if ( this.value && ( !request.term || matcher.test(text) ) )
            return {
              label: text,
              value: text,
              option: this
            };
        }) );
      },
 
      _removeIfInvalid: function( event, ui ) {
 
        // Selected an item, nothing to do
        if ( ui.item ) {
          return;
        }
 
        // Search for a match (case-insensitive)
        var value = this.input.val(),
          valueLowerCase = value.toLowerCase(),
          valid = false;
        this.element.children( "option" ).each(function() {
          if ( $( this ).text().toLowerCase() === valueLowerCase ) {
            this.selected = valid = true;
            return false;
          }
        });
 
        // Found a match, nothing to do
        if ( valid ) {
          return;
        }
 
        // Remove invalid value
        this.input
          .val( "" )
          .attr( "title", value + " no es una opción válida" )
          .tooltip( "open" );
        this.element.val( "" );
        this._delay(function() {
          this.input.tooltip( "close" ).attr( "title", "" );
        }, 2500 );
        this.input.data( "ui-autocomplete" ).term = "";
      },
 
      _destroy: function() {
        this.wrapper.remove();
        this.element.show();
      }
    });
  })( jQuery );
  </script>
<script>
   $(function() {
    $( "#usuario_usr_tipo_docum_ident" ).combobox();
    $( "#toggle" ).click(function() {
      $( "#usuario_usr_tipo_docum_ident" ).toggle();
    });
  });
  $(function() {
    $( "#usuario_usr_genero" ).combobox();
    $( "#toggle" ).click(function() {
      $( "#usuario_usr_genero" ).toggle();
    });
  });
  $(function() {
    $( "#usuario_usr_estado" ).combobox();
    $( "#toggle" ).click(function() {
      $( "#usuario_usr_estado" ).toggle();
    });
  });
  $(function() {
    $( "#usuario_perfil" ).combobox();
    $( "#toggle" ).click(function() {
      $( "#usuario_perfil" ).toggle();
    });
  });
  
  $(function() {
    $( "#usuario_usr_fecha_nacimiento" ).datepicker({
      changeMonth:true,
      changeYear:true
    });
  });
  </script>
<%= form_for(@usuario) do |f| %>
  	<% if @usuario.errors.any? %>
    	<div id="error_explanation">
      		<h2><%= pluralize(@usuario.errors.count, "error", "errores") %> no permite(n) que este registro sea grabado:</h2>

      		<ul>
      			<% @usuario.errors.full_messages.each do |msg| %>
        			<li><%= msg %></li>
      			<% end %>
      		</ul>
    	</div>
 	<% end %>
	<div class = "form_fields">
		<table width="100%">
			<tr>
				<td width="50%" valign="top">
			<div class="field">
		    	<%= f.label :Tipo_docum_identidad, "Tipo documento de identidad *" %><br>
		    	<%= f.select :usr_tipo_docum_ident, @tipos_id.map{|t| [t.ctlg_valor_desc, t.ctlg_valor_cdg]} %>
		  	</div>
		  	<div class="field">
		    	<%= f.label :Nro_documento_identidad, "Número documento de identidad *" %><br>
		    	<%= f.text_field :usr_nro_docum_ident %>
		  	</div>
		  	<div class="field">
		    	<%= f.label :Nombres, "Nombres *" %><br>
		    	<%= f.text_field :usr_nombres, size:40 %>
		  	</div>
		  	<div class="field">
		    	<%= f.label :Apellidos, "Apellidos *" %><br>
		    	<%= f.text_field :usr_apellidos, size:40 %>
		  	</div>
		  	<div class="field">
		    	<%= f.label :Correo_electronico, "Correo electrónico *" %><br>
		    	<%= f.text_field :usr_correo_electronico, size:40 %>
		  	</div>
		  	<div class="field">
		    	<%= f.label :Fecha_de_nacimiento %><br>
		    	<%= f.text_field :usr_fecha_nacimiento %>
		  	</div>
		  	</td>
		  	<td width="50%" valign="top">
		  	<div class="field">
		    	<%= f.label :Foto %><br>
		    	<%= f.text_field :usr_foto %>
		  	</div>
		  	<div class="field">
		    	<%= f.label :Genero, "Género *" %><br>
		    	<%= f.select :usr_genero, @generos.map{|t| [t.ctlg_valor_desc, t.ctlg_valor_cdg]} %>
		  	</div>
		  	<div class="field">
		    	<%= f.label :Tipo_cliente %><br>
		    	<%= f.text_field :usr_tipo_cliente %>
		  	</div>
		  	<div class="field">
		    	<%= f.label :Estado, "Estado *" %><br>
		    	<%= f.select :usr_estado, @estados.map{|t| [t.ctlg_valor_desc, t.ctlg_valor_cdg]} %>
		  	</div>
		  	<div class="field">
		    	<%= f.label :Perfil, "Perfil *" %><br>
		    	<%= f.select :perfil , @perfiles.map{|t| [t.prf_descripcion, t.id]} %>
		  	</div>
		  	</td>
		</table>
	</div>
	<div class="bottom">
  		<div class="actions">
    		<% if action_name == "edit"%>
				<%= f.submit "Aceptar", class: "cmd save" %> |
				<%= link_to 'Consultar', @usuario, class: "cmd star" %> |
			<% elsif action_name == "new" or action_name =="create" %>
				<%= link_to "Aceptar", nil, class: "cmd save", onclick: "$('.new_usuario').submit()" %> |
				
			<% end %>
			<%= link_to 'Regresar', usuarios_path, class: "cmd previous" %>
  		</div>
  	</div>
<% end %>