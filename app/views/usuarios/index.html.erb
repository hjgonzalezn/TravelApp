<style>
  .custom-combobox {
    position: relative;
    display: inline-block;
  }
  .custom-combobox-toggle {
    position: absolute;
    top: 0;
    bottom: 0;
    margin-left: -1px;
    padding: 0;
    /* support: IE7 */
    *height: 1.7em;
    *top: 0.1em;
  }
  .custom-combobox-input {
    margin: 0;
    padding: 0.3em;
    width: 17em;
  }
  </style>
  <script>
  (function( $ ) {
    $.widget( "custom.combobox", {
      _create: function() {
        this.wrapper = $( "<span>" )
          .addClass( "custom-combobox" )
          .insertAfter( this.element );
 
        this.element.hide();
        this._createAutocomplete();
        this._createShowAllButton();
      },
 
      _createAutocomplete: function() {
        var selected = this.element.children( ":selected" ),
          value = selected.val() ? selected.text() : "";
 
        this.input = $( "<input>" )
          .appendTo( this.wrapper )
          .val( value )
          .attr( "title", "" )
          .addClass( "custom-combobox-input ui-widget ui-widget-content ui-state-default ui-corner-left" )
          .autocomplete({
            delay: 0,
            minLength: 0,
            source: $.proxy( this, "_source" )
          })
          .tooltip({
            tooltipClass: "ui-state-highlight"
          });
 
        this._on( this.input, {
          autocompleteselect: function( event, ui ) {
            ui.item.option.selected = true;
            this._trigger( "select", event, {
              item: ui.item.option
            });
          },
 
          autocompletechange: "_removeIfInvalid"
        });
      },
 
      _createShowAllButton: function() {
        var input = this.input,
          wasOpen = false;
 
        $( "<a>" )
          .attr( "tabIndex", -1 )
          //.attr( "title", "Mostrar todas las opciones" )
          .tooltip()
          .appendTo( this.wrapper )
          .button({
            icons: {
              primary: "ui-icon-triangle-1-s"
            },
            text: false
          })
          .removeClass( "ui-corner-all" )
          .addClass( "custom-combobox-toggle ui-corner-right" )
          .mousedown(function() {
            wasOpen = input.autocomplete( "widget" ).is( ":visible" );
          })
          .click(function() {
            input.focus();
 
            // Close if already visible
            if ( wasOpen ) {
              return;
            }
 
            // Pass empty string as value to search for, displaying all results
            input.autocomplete( "search", "" );
          });
      },
 
      _source: function( request, response ) {
        var matcher = new RegExp( $.ui.autocomplete.escapeRegex(request.term), "i" );
        response( this.element.children( "option" ).map(function() {
          var text = $( this ).text();
          if ( this.value && ( !request.term || matcher.test(text) ) )
            return {
              label: text,
              value: text,
              option: this
            };
        }) );
      },
 
      _removeIfInvalid: function( event, ui ) {
 
        // Selected an item, nothing to do
        if ( ui.item ) {
          return;
        }
 
        // Search for a match (case-insensitive)
        var value = this.input.val(),
          valueLowerCase = value.toLowerCase(),
          valid = false;
        this.element.children( "option" ).each(function() {
          if ( $( this ).text().toLowerCase() === valueLowerCase ) {
            this.selected = valid = true;
            return false;
          }
        });
 
        // Found a match, nothing to do
        if ( valid ) {
          return;
        }
 
        // Remove invalid value
        this.input
          .val( "" )
          .attr( "title", value + " no es una opción válida" )
          .tooltip( "open" );
        this.element.val( "" );
        this._delay(function() {
          this.input.tooltip( "close" ).attr( "title", "" );
        }, 2500 );
        this.input.data( "ui-autocomplete" ).term = "";
      },
 
      _destroy: function() {
        this.wrapper.remove();
        this.element.show();
      }
    });
  })( jQuery );
  </script>
<script>
   $(function() {
    $( "#perfil_id" ).combobox();
    $( "#toggle" ).click(function() {
      $( "#perfil_id" ).toggle();
    });
  });

  </script>


<script>
$(document).ready(function() {
    $('#table_index').dataTable( {
    	"bJQueryUI": true,
        "sPaginationType": "full_numbers"
    } );
} );
</script>

<div class="wrapper">
	<div class="content">
		<div class="form_wrapper">
			<h3>Usuarios</h3>
			<br/>
			<div class="form buscar">
				<%= form_tag usuarios_path, method: 'get' do %>
					<table width="100%">
				 		<tr>
				 			<td>
				 				&nbsp;&nbsp;&nbsp;
				 				<%= label_tag(:perfil, "Perfil") %>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
								<%= collection_select(:perfil, :id, @perfiles, :id, :prf_descripcion, :prompt => '') %>
							</td>
							<td>
	  							<%= label_tag(:usr_nro_docum_ident, "Nro. Identificación") %>&nbsp;
	  							<%= text_field(:usuario, :usr_nro_docum_ident, size:29) %>
	  							<%= submit_tag "Buscar" %>
	  						</td>
	  					</tr>
	  					<tr>
	  						<td>&nbsp;&nbsp;&nbsp;
	  							<%= label_tag(:usr_nombres, "Nombres") %>&nbsp;
	  							<%= text_field(:usuario, :usr_nombres, size:40) %>
							</td>
							<td>
								<%= label_tag(:usr_apellidos, "Apellidos") %>&nbsp;
								<%= text_field(:catalogo, :ctlg_valor_desc, size:40) %>
			  					
							</td>
						</tr>
					</table>
				<% end %>
			</div>
			<center>
				<table id="table_index">
			  		<thead>
					    <tr>
					      <th>Docum. identidad</th>
					      <th>Nombres y Apellidos</th>
					      <th>Perfil</th>
					      <th></th>
					      <th></th>
					    </tr>
			  		</thead>
			
			  		<tbody>
					    <% @usuarios.each do |usuario| %>
					      <tr>
					        <td><%= usuario.usr_tipo_docum_ident + " - " + usuario.usr_nro_docum_ident.to_s %></td>
					        <td><%= link_to usuario.usr_nombres + " " + usuario.usr_apellidos , usuario %></td>
					        <%perfil = Perfil.find(usuario.perfil)%>
				        	<td><%= perfil.prf_descripcion %></td>
					        <td><%= link_to 'Editar', edit_usuario_path(usuario), class: "cmd edit" %></td>
					        <td><%= link_to 'Borrar', usuario, method: :delete, data: { confirm: '¿Está seguro de eliminar este registro?' }, class: "cmd delete" %></td>
					      </tr>
					    <% end %>
			  		</tbody>
				</table>
			</center>
			<br>
			<div class="bottom">
				<%= link_to 'Crear usuario', new_usuario_path, class: "cmd add" %>
			</div>
		</div>
	</div>
</div>