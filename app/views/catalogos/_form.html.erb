  <script>
  $(function() {
    var categorias = [
    <% if @categorias != nil %>
    <% @categorias.each do |categoria| %>
      	{
      	
        	value: "<%= categoria.ctlg_categoria %>",
        	label: "<%= categoria.ctlg_categoria %>",
        	desc: "",
        	icon: ""
      },
    <% end %>
    <% end %>
    ];
    
    var subcategorias = [
    <% @subcategorias.each do |subcategoria| %>
      	{
      	
        	value: "<%= subcategoria.ctlg_subcategoria %>",
        	label: "<%= subcategoria.ctlg_subcategoria %>",
        	desc: "",
        	icon: ""
      },
    <% end %>
    ];
    
    $( "#catalogo_ctlg_categoria" ).autocomplete({
      minLength: 0,
      source: categorias,
      focus: function( event, ui ) {
        $( "#catalogo_ctlg_categoria" ).val( ui.item.label );
        return false;
      },
      select: function( event, ui ) {
        $( "#catalogo_ctlg_categoria" ).val( ui.item.value );
        return false;
      }
    })
    /**************************************************/
     $( "#catalogo_ctlg_subcategoria" ).autocomplete({
      minLength: 0,
      source: subcategorias,
      focus: function( event, ui ) {
        $( "#catalogo_ctlg_subcategoria" ).val( ui.item.label );
        return false;
      },
      select: function( event, ui ) {
        $( "#catalogo_ctlg_subcategoria" ).val( ui.item.value );
        return false;
      }
    })
    .data( "ui-autocomplete" )._renderItem = function( ul, item ) {
      return $( "<li>" )
        .append( "<a>" + item.label + "<br>" + item.desc + "</a>" )
        .appendTo( ul );
    };
  });
  </script>
<style>
  .custom-combobox {
    position: relative;
    display: inline-block;
  }
  .custom-combobox-toggle {
    position: absolute;
    top: 0;
    bottom: 0;
    margin-left: -1px;
    padding: 0;
    /* support: IE7 */
    *height: 1.7em;
    *top: 0.1em;
  }
  .custom-combobox-input {
    margin: 0;
    padding: 0.3em;
  }
  </style>
  <script>
  (function( $ ) {
    $.widget( "custom.combobox", {
      _create: function() {
        this.wrapper = $( "<span>" )
          .addClass( "custom-combobox" )
          .insertAfter( this.element );
 
        this.element.hide();
        this._createAutocomplete();
        this._createShowAllButton();
      },
 
      _createAutocomplete: function() {
        var selected = this.element.children( ":selected" ),
          value = selected.val() ? selected.text() : "";
 
        this.input = $( "<input>" )
          .appendTo( this.wrapper )
          .val( value )
          .attr( "title", "" )
          .addClass( "custom-combobox-input ui-widget ui-widget-content ui-state-default ui-corner-left" )
          .autocomplete({
            delay: 0,
            minLength: 0,
            source: $.proxy( this, "_source" )
          })
          .tooltip({
            tooltipClass: "ui-state-highlight"
          });
 
        this._on( this.input, {
          autocompleteselect: function( event, ui ) {
            ui.item.option.selected = true;
            this._trigger( "select", event, {
              item: ui.item.option
            });
          },
 
          autocompletechange: "_removeIfInvalid"
        });
      },
 
      _createShowAllButton: function() {
        var input = this.input,
          wasOpen = false;
 
        $( "<a>" )
          .attr( "tabIndex", -1 )
          //.attr( "title", "Mostrar todas las opciones" )
          .tooltip()
          .appendTo( this.wrapper )
          .button({
            icons: {
              primary: "ui-icon-triangle-1-s"
            },
            text: false
          })
          .removeClass( "ui-corner-all" )
          .addClass( "custom-combobox-toggle ui-corner-right" )
          .mousedown(function() {
            wasOpen = input.autocomplete( "widget" ).is( ":visible" );
          })
          .click(function() {
            input.focus();
 
            // Close if already visible
            if ( wasOpen ) {
              return;
            }
 
            // Pass empty string as value to search for, displaying all results
            input.autocomplete( "search", "" );
          });
      },
 
      _source: function( request, response ) {
        var matcher = new RegExp( $.ui.autocomplete.escapeRegex(request.term), "i" );
        response( this.element.children( "option" ).map(function() {
          var text = $( this ).text();
          if ( this.value && ( !request.term || matcher.test(text) ) )
            return {
              label: text,
              value: text,
              option: this
            };
        }) );
      },
 
      _removeIfInvalid: function( event, ui ) {
 
        // Selected an item, nothing to do
        if ( ui.item ) {
          return;
        }
 
        // Search for a match (case-insensitive)
        var value = this.input.val(),
          valueLowerCase = value.toLowerCase(),
          valid = false;
        this.element.children( "option" ).each(function() {
          if ( $( this ).text().toLowerCase() === valueLowerCase ) {
            this.selected = valid = true;
            return false;
          }
        });
 
        // Found a match, nothing to do
        if ( valid ) {
          return;
        }
 
        // Remove invalid value
        this.input
          .val( "" )
          .attr( "title", value + " no es una opción válida" )
          .tooltip( "open" );
        this.element.val( "" );
        this._delay(function() {
          this.input.tooltip( "close" ).attr( "title", "" );
        }, 2500 );
        this.input.data( "ui-autocomplete" ).term = "";
      },
 
      _destroy: function() {
        this.wrapper.remove();
        this.element.show();
      }
    });
  })( jQuery );
  </script>
<script>
   $(function() {
    $( "#catalogo_ctlg_estado_registro" ).combobox();
  });
  </script>

<%= form_for(@catalogo) do |f| %>
	<% if @catalogo.errors.any? %>
    	<div id="error_explanation">
      		<h2><%= pluralize(@catalogo.errors.count, "error", "errores") %> no permite(n) que este registro sea grabado:</h2>
      		<ul>
      			<% @catalogo.errors.full_messages.each do |msg| %>
        			<li><%= msg %></li>
      			<% end %>
      		</ul>
    	</div>
  	<% end %>
	<div class = "form_fields">
  		<div class="field">
    		<%= f.label :Categoria, "Categoría *" %><br>
    		<%= f.text_field :ctlg_categoria, options= {size:50, maxlength:40, required: :required, autofocus: :autofocus, "data-validation" => "length alphanumeric", "data-validation-allowing" =>" ", "data-validation-length" => "min5"} %>
  		</div>
	  	<div class="field">
	    	<%= f.label :Subcategoría %><br>
	    	<%= f.text_field :ctlg_subcategoria, options= {size:50, maxlength:40, "data-validation" => "alphanumeric length", "data-validation-length" => "min5", "data-validation-optional" => "true" } %>
	  	</div>
	  	<div class="field">
	    	<%= f.label :Código, "Código *" %><br>
	    	<%= f.text_field :ctlg_valor_cdg , options= {size:50, maxlength:40, required: :required, "data-validation" => "length alphanumeric", "data-validation-length" => "min3"}%>
	  	</div>
	  	<div class="field">
	    	<%= f.label :Descripción, "Descripción *" %><br>
	    	<%= f.text_field :ctlg_valor_desc, options= {size:50, maxlength:40, required: :required, "data-validation" => "length alphanumeric", "data-validation-length" => "min5"} %>
	  	</div>
	  	<div class="field">
	    	<%= f.label :Observación %><br>
	    	<%= f.text_field :ctlg_observacion, options= {size:50, maxlength:40, "data-validation" => "length alphanumeric", "data-validation-length" => "min5", "data-validation-optional" => "true" } %>
	  	</div>
	  	<div class="field">
	    	<%= f.label :Estado_registro, "Estado registro *" %><br>
	    	<%= f.select :ctlg_estado_registro, @estados_registro.map{|u| [u.ctlg_valor_desc, u.ctlg_valor_cdg]}.insert(nil.to_f, nil), selected: @estado_registro %>
	  	</div>
  	</div>
  	<div class="bottom">
  		<div class="actions">
			<% if action_name == "edit"%>
				<%= f.submit "Aceptar", class: "cmd save", id: :cmd_aceptar %> |
				<%= link_to 'Consultar', @perfil, class: "cmd star", id: :cmd_consultar %> |
			<% elsif action_name == "new" or action_name =="create" %>
				<script>
					$(function(){
						$("#cmd_aceptar")
						.click(function(){
							$('#new_catalogo').submit();
						});
					});
				</script>
				
				<%= link_to "Aceptar", nil, class: "cmd save", id: :cmd_aceptar %> |
			<% end %>
			<%= link_to 'Regresar', catalogos_path, class: "cmd previous", id: :cmd_regresar %>
  		</div>
  	</div>
<% end %>
<script> $.validate(); </script>